version: "3.3"

volumes:
  grafana_data:
  prometheus_data:

services:

  traefik:
    image: "traefik:latest"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.network=yosoft-network"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--entryPoints.metrics.address=:8082"
      # - "--entryPoints.ws.address=:80"
      # - "--entryPoints.wss.address=:80"
      - "--log.level=DEBUG"
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=azuredns"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=godaddy"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.myresolver.acme.email=ing_julioramirez@hotmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addrouterslabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.entryPoint=metrics"
    ports:
      - "80:80"
      - "443:443"
        # The Web UI (enabled by --api.insecure=true)
      # - "8080:8080"
    environment:
      - TZ=America/Bogota
      - LEGO_DISABLE_CNAME_SUPPORT=true
      - "GODADDY_HTTP_TIMEOUT=600"
      - "GODADDY_POLLING_INTERVAL=300"
      - "GODADDY_PROPAGATION_TIMEOUT=600"
      - "GODADDY_TTL=600"
      - "GODADDY_API_KEY=AEWXmg5AwMD_5rBYR6ANphGmy5z2ZErhBT"
      - "GODADDY_API_SECRET=NthD4p5ugy7tv8ZgK7dT5u"
      # - "AZURE_TENANT_ID=xxx"
      # - "AZURE_SUBSCRIPTION_ID=8d0e846a-7e24-441b-8332-2fb4f8a84ba3"
      # - "AZURE_RESOURCE_GROUP=yosoft"
      # - "AZURE_SUBSCRIPTION_ID=xxx"
      # - "AZURE_SUBSCRIPTION_ID=xxx"
      # - "AZURE_SUBSCRIPTION_ID=xxx"
    networks:
      - yosoft-network
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      labels:
        # - traefik.frontend.rule=Host:monitor.yosoft.app
        # - traefik.port=8080
        # - traefik.enable=true
        - "traefik.http.middlewares.frontend.basicauth.users=yosoft2050:$$apr1$$7ccOzZBc$$IX66yHX3lwEGDz3nCEV220"
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`monitor.yosoft.app`)"
        - "traefik.http.routers.frontend.entrypoints=websecure"
        - "traefik.http.routers.frontend.tls.certresolver=myresolver"
        - "traefik.http.services.frontend.loadbalancer.server.port=8080"
  portainer:
    image: "portainer/portainer-ce"
    ports:
      - "8000:8000"
      - "9001:9000"
    networks:
      - yosoft-network
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer.yosoft.app`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls.certresolver=myresolver"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000" # Siempre debemos definir un puerto.
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/portainer_data:/data"
    environment:
      - TZ=America/Bogota

  loki:
    image: grafana/loki:latest
    volumes:
      - ./data/loki_data:/etc/loki
    ports:
      - "3110:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - yosoft-network
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.loki.rule=Host(`loki.yosoft.app`)"
        - "traefik.http.routers.loki.entrypoints=websecure"
        - "traefik.http.routers.loki.tls.certresolver=myresolver"
        - "traefik.http.services.loki.loadbalancer.server.port=3110"
    environment:
      - TZ=America/Bogota

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./data/promtail_data:/etc/promtail
    # ports:
    #   - "1514:1514" # this is only needed if you are going to send syslogs
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - yosoft-network
    environment:
      - TZ=America/Bogota

  grafana:
    image: grafana/grafana-oss:latest
    restart: unless-stopped
    volumes:
      - ./data/grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - yosoft-network
    user: "0"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.yosoft.app`)"
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.routers.grafana.tls.certresolver=myresolver"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000" # Siempre debemos definir un puerto.
    environment:
      - TZ=America/Bogota
    
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus_data:/prometheus
    ports:
      - 9090:9090
    networks:
      - yosoft-network
    user: "0"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=1y"
      - "--web.enable-lifecycle"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.yosoft.app`)"
        - "traefik.http.routers.prometheus.entrypoints=websecure"
        - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090" # Siempre debemos definir un puerto.
    environment:
      - TZ=America/Bogota

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    restart: unless-stopped
    ports:
      - 9100:9100
    networks:
      - yosoft-network
    ###### linux
    command:
      - "--path.rootfs=/host"
    pid: host
    volumes:
      - "/:/host:ro,rslave"
    ###### windows
    # volumes:
    #   - /proc:/host/proc:ro
    #   - /sys:/host/sys:ro
    # command:
    #   - '--path.procfs=/host/proc'
    #   - '--path.sysfs=/host/sys'
    #   - --collector.filesystem.ignored-mount-points
    #   - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    environment:
      - TZ=America/Bogota

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    # expose:
    #   - 8080
    networks:
      - yosoft-network
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    environment:
      - TZ=America/Bogota
      
networks:
  yosoft-network:
    external: true
