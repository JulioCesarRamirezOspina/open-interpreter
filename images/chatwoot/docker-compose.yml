version: '3'

services:
  base: &base
    image: chatwoot/chatwoot:latest
    env_file: .env ## Change this file for customized env variables
    volumes:
      - ./data/storage:/app/storage
    networks:
      - yosoft-network


  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    ports:
      - '3100:3100'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    # command: ['bundle', 'exec', 'rails', 's', '-p', '3100', '-b', '0.0.0.0']
    command:
      - sh
      - -c
      - |
        bundle exec rails s -p 3100 -b 0.0.0.0 &
        bundle exec rails db:chatwoot_prepare

    networks:
      - yosoft-network
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.chatwoot.rule=Host(`chatwoot.yosoft.app`)"
        - "traefik.http.routers.chatwoot.entrypoints=websecure"
        - "traefik.http.routers.chatwoot.tls.certresolver=myresolver"
        - "traefik.http.services.chatwoot.loadbalancer.server.port=3100" # Siempre debemos definir un puerto.

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    networks:
        - yosoft-network

  postgres:
    image: postgres:12
    # restart: always
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot_production
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=y0s0ft2050..
    networks:
      - yosoft-network
    # expose:
    #   - "8080"
    #   - "5432"
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.postgres.rule=Host(`postgres.yosoft.app`)"
        - "traefik.http.routers.postgres.entrypoints=websecure"
        - "traefik.http.routers.postgres.tls.certresolver=myresolver"
        - "traefik.http.routers.postgres.tls=true"
        - "traefik.http.services.postgres.loadbalancer.server.port=5432"

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - ./data/redis:/data
    ports:
      - '6379:6379'
    networks:
      - yosoft-network

  pgadmin:
      image: dpage/pgadmin4
      # restart: always
      depends_on:
        - postgres
      volumes:
        - ./data/pgadmin:/var/lib/pgadmin
      # ports:
      #   - 5050:80
      networks:
        - yosoft-network
      environment:
        - TZ=America/Bogota
        - PGADMIN_DEFAULT_EMAIL=julio.ramirez@yosoft.com.co
        - PGADMIN_DEFAULT_PASSWORD= y0s0ft2050..
        # SCRIPT_NAME: /_admin/pgadmin
      labels:
        - "traefik.enable=true"
        # - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.yosoft.app`) && PathPrefix(`/_admin/pgadmin`)"
        - "traefik.http.routers.pgadmin.tls=true"
        - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.yosoft.app`)"
        - "traefik.http.routers.pgadmin.entrypoints=websecure"
        - "traefik.http.routers.pgadmin.tls.certresolver=myresolver"
        - "traefik.http.routers.pgadmin.service=pgadmin"

        # - "traefik.http.routers.pgadmin4-http.entrypoints=web"
        # - "traefik.http.routers.pgadmin4-http.rule=Host(`pgadmin.aymconsultores.es`)"
        # - "traefik.http.routers.pgadmin4.entrypoints=websecure"
        # - "traefik.http.routers.pgadmin4.rule=Host(`pgadmin.aymconsultores.es`)"
        # - "traefik.http.routers.pgadmin4-http.middlewares=pgadmin4-https@docker"
        # - "traefik.http.middlewares.pgadmin.redirectscheme.scheme=https"
        - "traefik.http.services.pgadmin.loadbalancer.server.port=80" # Siempre debemos definir un puerto.
        # - "traefik.http.services.pgadmin.loadbalancer.server.port=5050" # Siempre debemos definir un puerto.
      user: "0" # Especifica el UID:GID deseado

networks:
  yosoft-network:
    external: true